#!/bin/bash

(make clean; make) || exit 1

total=0
totalmax=0

rm -f total.txt *out total.txt

# Test driver
function runtest {
  prog=$1
  args=$2
  testinput=$3
  grade=$4
  totalmax=`expr $totalmax + $grade`;
  inputdescr=
  if [ "$testinput" != "none" ]; then
      inputdescr=" < $testinput"
  fi
  descr="$prog $args $inputdescr"
  
  echo "======= $descr ==========="

  #Run tested program
  ./$prog $args < $testinput > $prog.out
  errorcode=$?
#  if [ $? -ne 0 ]; then
#     echo Cannot run ./$prog
#     cat $prog.out
#     echo "*****Test Failed*****";
#     return
#  fi

  #Run original program
  ./$prog.org $args< $testinput > $prog.org.out
  orgerrorcode=$?
#  if [ $? -ne 0 ]; then
#     echo Cannot run ./$prog.org
#     cat $prog.org.out
#     echo "*****Test Failed*****";
#     return
#  fi
  if [ $errorcode -ne $orgerrorcode ]; then
      echo Error codes do not match
      echo "*****Test Failed*****";
      return
  fi

  diff $prog.out $prog.org.out > diff.out
  if [ $? -eq 0 ]; then
      cat $prog.out
      echo Test passed...;
      printf "%-36s: %-3d of %-3d\n" "$descr " $grade $grade >> total.txt
      total=`expr $total + $grade`;
  else
      echo "*****Test Failed*****";
      echo ------ Your Output ----------
      cat $prog.out
      echo ------ Expected Output ------
      cat $prog.org.out
      echo ------ Difference -----------
      cat diff.out
      echo -----------------------------
      printf "%-36s: %-3d of %-3d\n" "$descr " 0 $grade >> total.txt
  fi
  echo
}

# List of tests running

runtest money-exchange "" none 3
runtest money-exchange "invalid argc" none 3
runtest money-exchange "dollar 10.99 0.92" none 3
runtest money-exchange "euro 10.00 1.09" none 3
runtest money-exchange "euro -10.00 1.09" none 3
runtest money-exchange "pound 5.98 1.30" none 3
runtest money-exchange "invalidfile" none 3
runtest money-exchange "prices.txt" none 3

echo > total.out
echo >> total.out
echo   "-------------------------------------------------" >> total.out
echo   "CS240: Lab 3. $USER   " >> total.out
date >> total.out
echo   "-------------------------------------------------" >> total.out
cat total.txt >> total.out >> total.out
echo   "-------------------------------------------------" >> total.out
echo   "CS240: Lab 3. $USER" `date` " Total: " $total of $totalmax >> total.out
echo >> total.out

cat total.out
cat total.out >> .local.total.out

